<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <style type="text/css">
      body {margin:0;padding:0;}
      #digitalsign, .image_wrapper, video, iframe { width: 100%; border: none; }

      /* Center images both verticly and horizontaly */
      .image_wrapper { text-align: center; }
      .image_wrapper > img { max-height: 100%; max-width: 100%; vertical-align: middle; }
    </style>
  </head>
  <body>
    <div id="digitalsign"></div>
  </body>

  <script src="http://code.jquery.com/jquery-latest.js"></script>

  <!-- Cycle JQuery plugin -->
  <!-- <script src="http://malsup.github.com/jquery.cycle.all.js"></script> -->
  <!-- <script src="http://malsup.github.com/jquery.cycle.lite.js"></script> -->
  <%= javascript_include_tag "plugins/jquery.cycle.js" %>

  <script>
    var sign;
    var refreshSlides = false;
    var signUrl = "<%= sign_path(@sign, format: :json) %>";
    var displayIsPaused = false;
    var waitToAdvanceSlides = false;

    $.getJSON(signUrl, function(data){
      sign = data.sign;
      initializeDisplay();
    });
    function initializeDisplay() {
      // Setup Check-in
      var check_in_interval = sign.check_in_interval * 1000;
      if (check_in_interval < 30000) { check_in_interval = 30000; }
      setInterval(function(){checkIn()}, check_in_interval);
      // Setup Reload interval
      var reload_interval = sign.reload_interval * 1000;
      if (reload_interval < 3000) { reload_interval = 3000; }
      setInterval(function(){checkReload()}, reload_interval);

      // Loop through slides
      $.each(sign.slots, function(i,slot) {
        var slide = slot.slide;
        if (slide.uri != "") {
          if (slide.content_type.match(/video/)) {
            var video = $("<video/>");
            video.attr('src', slide.uri);
            video.get(0).addEventListener('ended',videoEnded,false);
            $('#digitalsign').append(video);
          }
          if (slide.content_type.match(/image/)) {
            var imageWrapper = $("<div class='image_wrapper'></div>")
            imageWrapper.css("line-height", sign.height-5+"px"); // The minus 5 is to account for some browser differences
            imageWrapper.css("background-color", slide.color);
            imageWrapper.data('delay', slide.delay);
            var image = $("<img/>");
            image.attr('src', slide.uri);
            $('#digitalsign').append(imageWrapper.append(image));
          }
          if (slide.content_type.match(/text/)) {
            var frame = $("<iframe></iframe>");
            frame.attr('src', slide.uri);
            frame.data('delay', slide.delay);
            $('#digitalsign').append(frame);
          }
          if (slide.content_type.match(/flash/)) {
            var frame = $("<iframe></iframe>");
            frame.attr('src', slide.uri);
            frame.data('delay', slide.delay);
            $('#digitalsign').append(frame);
          }
        }
      });

      $('#digitalsign').cycle({
        timeout: 0,
        width: (sign.width || 1920),
        height: (sign.height || 1080),
        fit: 1,
        before: function(){
          if(this.nodeName=="VIDEO"){
            this.play();
          }
          else {
            var timeout = parseInt($(this).data('delay')) * 1000;
            if (timeout < 3000 || isNaN(timeout)) { timeout = 3000; }
            setTimeout(function(){nextSlide()}, timeout);
            waitToAdvanceSlides = true; // wait till the above timeout finishes so you don't have two cycles running at once when resume to early from pause
          }
        },
        end: function(){
          if (refreshSlides) { location.reload(); }
        }
      });
    }

    function videoEnded(e) {
      if(!e) { e = window.event; }
      // What you want to do after the event
      nextSlide();
    }

    function nextSlide() {
      if (!displayIsPaused) {
        $('#digitalsign').cycle("next");
      } else { 
        waitToAdvanceSlides = false;
      }
    }

    function checkReload() {
      $.getJSON(signUrl, function(data){
        if (JSON.stringify(sign) != JSON.stringify(data)){
          refreshSlides = data;
        }
      });
    }

    function checkIn() {
      $.get(sign.check_in_url, function(data) {});
    }

    function togglePlay() {
      displayIsPaused = !displayIsPaused;
      
      // If resumed playing
      if (!displayIsPaused && !waitToAdvanceSlides) {
        nextSlide();
      }
    }
  </script>

</html>